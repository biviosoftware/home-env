#!/usr/bin/env bash
#
# Initialize a project directory with a local virtualenv. Take care to install
# special packages (see below).
#

if [ ! -d .git ]; then
    echo 'No .git directory in pwd' 1>&2
    echo 'cd to the project directory' 1>&2
    exit 1
fi
. ~/.bashrc

if ! pyenv global >& /dev/null; then
    echo 'No global pyenv version' 1>&2
    echo 'Create one, e.g. run: py2' 1>&2
    exit 1
fi

project_dir="$(pwd)"
project=$(basename "$project_dir")
venv="$(pyenv local 2> /dev/null)"

# Create the local virtualenv
if [ -z "$venv" ]; then
    venv="$project"
    cd ..
    pyenv virtualenv "$venv"
    cd $project
    pyenv local "$venv"
# If already have a local, make sure it's named corrrectly
elif [ "$project" != "$venv" ]; then
    echo "project ($project) is not same as virtualenv ($venv)" 1>&2
    echo "You may want to: pyenv uninstall $venv" 1>&2
    echo "And then: rm .python-version" 1>&2
    exit 1
fi

# install numpy, because needs to be installed separately from 
numpy=$(egrep '^numpy[\W' requirements.txt 2>/dev/null)
if [ -n "$numpy" ]; then
    pip install "$numpy"
fi

# install pybivio
if [ pybivio != "$project" ]; then
    if [ ! -d ~/src/biviosoftware/pybivio ]; then
        mkdir -p ~/src/biviosoftware >& /dev/null
        cd ~/src/biviosoftware
        git clone https://github.com/biviosoftware/pybivio
    fi
    cd ~/src/biviosoftware/pybivio
    pyenv deactivate >& /dev/null
    pyenv activate "$venv"
    python setup.py develop
fi

# install $project
cd "$project_dir"
pyenv activate
if [ -r setup.py ]; then
    python setup.py develop
fi
